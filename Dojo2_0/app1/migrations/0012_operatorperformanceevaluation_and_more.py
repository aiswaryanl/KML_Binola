# Generated by Django 5.2.5 on 2025-09-08 04:48

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app1', '0011_hanchouexamquestion_hancontent_shocontent_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OperatorPerformanceEvaluation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('shift', models.CharField(max_length=20)),
                ('line', models.CharField(max_length=100)),
                ('process_name', models.CharField(max_length=100)),
                ('operation_no', models.CharField(max_length=50)),
                ('date_of_retraining_completed', models.DateField(blank=True, null=True)),
                ('prepared_by', models.CharField(blank=True, max_length=100, null=True)),
                ('checked_by', models.CharField(blank=True, max_length=100, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=100, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('final_percentage', models.FloatField(blank=True, null=True)),
                ('final_status', models.CharField(choices=[('Pass', 'Pass'), ('Fail - Retraining Required', 'Fail - Retraining Required'), ('Not Evaluated', 'Not Evaluated')], default='Not Evaluated', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='app1.department')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_evaluations', to='app1.mastertable')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='app1.level')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='app1.station')),
            ],
        ),
        migrations.CreateModel(
            name='TenCycleDayConfiguration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day_name', models.CharField(max_length=50)),
                ('sequence_order', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='day_configurations', to='app1.department')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='day_configurations', to='app1.level')),
            ],
            options={
                'ordering': ['level', 'department', 'sequence_order'],
                'unique_together': {('level', 'department', 'day_name')},
            },
        ),
        migrations.CreateModel(
            name='TenCycleTopics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('slno', models.PositiveIntegerField()),
                ('cycle_topics', models.CharField(max_length=200)),
                ('sub_topic', models.CharField(blank=True, max_length=200, null=True)),
                ('score_required', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tencycle_topics', to='app1.department')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tencycle_topics', to='app1.level')),
            ],
            options={
                'ordering': ['level', 'department', 'slno'],
                'unique_together': {('level', 'department', 'slno')},
            },
        ),
        migrations.CreateModel(
            name='TenCyclePassingCriteria',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('passing_percentage', models.FloatField(default=60.0, help_text='Minimum percentage required to pass', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passing_criteria', to='app1.department')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passing_criteria', to='app1.level')),
            ],
            options={
                'unique_together': {('level', 'department')},
            },
        ),
        migrations.CreateModel(
            name='EvaluationTopicMarks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mark_1', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mark_2', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mark_3', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mark_4', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mark_5', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mark_6', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mark_7', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mark_8', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mark_9', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('mark_10', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_score', models.IntegerField(blank=True, null=True)),
                ('max_possible_score', models.IntegerField(blank=True, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_marks', to='app1.operatorperformanceevaluation')),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_marks', to='app1.tencycledayconfiguration')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_marks', to='app1.tencycletopics')),
            ],
            options={
                'unique_together': {('employee', 'topic', 'day')},
            },
        ),
    ]
