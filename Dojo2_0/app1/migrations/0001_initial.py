# Generated by Django 5.2.5 on 2025-09-02 04:29

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('factory_id', models.AutoField(primary_key=True, serialize=False)),
                ('factory_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hq',
            fields=[
                ('hq_id', models.AutoField(primary_key=True, serialize=False)),
                ('hq_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HumanBodyQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('level_id', models.AutoField(primary_key=True, serialize=False)),
                ('level_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MasterTable',
            fields=[
                ('emp_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('date_of_joining', models.DateField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number.', regex='^\\+?1?\\d{9,15}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('station_id', models.AutoField(primary_key=True, serialize=False)),
                ('station_name', models.CharField(max_length=100, unique=True)),
                ('ctq', models.BooleanField(default=False)),
                ('pdi', models.BooleanField(default=False)),
                ('critical', models.BooleanField(default=False)),
                ('marua', models.BooleanField(default=False)),
                ('other', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('temp_id', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(max_length=17)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='M', max_length=1)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('employeeid', models.CharField(max_length=10, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('role', models.CharField(choices=[('developer', 'Developer'), ('management', 'Management'), ('admin', 'Admin'), ('instructor', 'Instructor'), ('operator', 'Operator')], default='', max_length=20)),
                ('hq', models.CharField(blank=True, max_length=50, null=True)),
                ('factory', models.CharField(blank=True, max_length=50, null=True)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=100, unique=True)),
                ('factory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='app1.factory')),
            ],
        ),
        migrations.AddField(
            model_name='factory',
            name='hq',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='factories', to='app1.hq'),
        ),
        migrations.CreateModel(
            name='Days',
            fields=[
                ('days_id', models.AutoField(primary_key=True, serialize=False)),
                ('day', models.CharField(max_length=15, unique=True)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='app1.level')),
            ],
            options={
                'verbose_name_plural': 'Days',
            },
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('line_id', models.AutoField(primary_key=True, serialize=False)),
                ('line_name', models.CharField(max_length=100, unique=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='app1.department')),
            ],
        ),
        migrations.AddField(
            model_name='level',
            name='station',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='app1.station'),
        ),
        migrations.CreateModel(
            name='SubLine',
            fields=[
                ('subline_id', models.AutoField(primary_key=True, serialize=False)),
                ('subline_name', models.CharField(max_length=100, unique=True)),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sublines', to='app1.line')),
            ],
        ),
        migrations.AddField(
            model_name='station',
            name='subline',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='app1.subline'),
        ),
        migrations.CreateModel(
            name='SubTopic',
            fields=[
                ('subtopic_id', models.AutoField(primary_key=True, serialize=False)),
                ('subtopic_name', models.CharField(max_length=255)),
                ('days', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='app1.days')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('evaluation_id', models.AutoField(primary_key=True, serialize=False)),
                ('evaluation_text', models.TextField()),
                ('subtopic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='app1.subtopic')),
            ],
        ),
        migrations.CreateModel(
            name='SubTopicContent',
            fields=[
                ('subtopiccontent_id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('subtopic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='app1.subtopic')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topic_id', models.AutoField(primary_key=True, serialize=False)),
                ('topic_name', models.CharField(max_length=255)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='app1.level')),
            ],
        ),
        migrations.AddField(
            model_name='subtopic',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='app1.topic'),
        ),
        migrations.CreateModel(
            name='TrainingContent',
            fields=[
                ('trainingcontent_id', models.AutoField(primary_key=True, serialize=False)),
                ('material', models.TextField()),
                ('subtopiccontent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_contents', to='app1.subtopiccontent')),
            ],
        ),
        migrations.CreateModel(
            name='HumanBodyCheckSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_id', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.userregistration')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HumanBodyCheckSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('pending', 'Pending')], default='pending', max_length=10)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sheet_answers', to='app1.humanbodychecksession')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.humanbodyquestions')),
            ],
            options={
                'unique_together': {('session', 'question')},
            },
        ),
    ]
