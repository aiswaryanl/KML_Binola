# Generated by Django 5.1 on 2025-09-11 04:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app1", "0027_remove_operatorperformanceevaluation_department_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="OperatorPerformanceEvaluation",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateField()),
                ("shift", models.CharField(max_length=20)),
                ("line", models.CharField(max_length=100)),
                ("process_name", models.CharField(max_length=100)),
                ("operation_no", models.CharField(max_length=50)),
                (
                    "date_of_retraining_completed",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "prepared_by",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("checked_by", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "approved_by",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("is_completed", models.BooleanField(default=False)),
                ("final_percentage", models.FloatField(blank=True, null=True)),
                (
                    "final_status",
                    models.CharField(
                        choices=[
                            ("Pass", "Pass"),
                            (
                                "Fail - Retraining Required",
                                "Fail - Retraining Required",
                            ),
                            ("Not Evaluated", "Not Evaluated"),
                        ],
                        default="Not Evaluated",
                        max_length=30,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations",
                        to="app1.department",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_evaluations",
                        to="app1.mastertable",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations",
                        to="app1.level",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations",
                        to="app1.station",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TenCycleDayConfiguration",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("day_name", models.CharField(max_length=50)),
                ("sequence_order", models.PositiveIntegerField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="day_configurations",
                        to="app1.department",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="day_configurations",
                        to="app1.level",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="day_configurations",
                        to="app1.station",
                    ),
                ),
            ],
            options={
                "ordering": ["level", "department", "station", "sequence_order"],
                "unique_together": {("level", "department", "station", "day_name")},
            },
        ),
        migrations.CreateModel(
            name="TenCycleTopics",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("slno", models.PositiveIntegerField()),
                ("cycle_topics", models.CharField(max_length=200)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tencycle_topics",
                        to="app1.department",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tencycle_topics",
                        to="app1.level",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ten_cycle_topics",
                        to="app1.station",
                    ),
                ),
            ],
            options={
                "ordering": ["level", "department", "station", "slno"],
                "unique_together": {("level", "department", "station", "slno")},
            },
        ),
        migrations.CreateModel(
            name="TenCycleSubTopic",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("sub_topic", models.CharField(max_length=200)),
                ("score_required", models.PositiveIntegerField(default=1)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subtopics",
                        to="app1.tencycletopics",
                    ),
                ),
            ],
            options={
                "ordering": ["topic", "id"],
                "unique_together": {("topic", "sub_topic")},
            },
        ),
        migrations.CreateModel(
            name="TenCyclePassingCriteria",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "passing_percentage",
                    models.FloatField(
                        default=60.0,
                        help_text="Minimum percentage required to pass",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                ("created_by", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ten_cycle_passing_criteria",
                        to="app1.department",
                    ),
                ),
                (
                    "level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ten_cycle_passing_criteria",
                        to="app1.level",
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ten_cycle_passing_criteria",
                        to="app1.station",
                    ),
                ),
            ],
            options={
                "unique_together": {("level", "department", "station")},
            },
        ),
        migrations.CreateModel(
            name="EvaluationSubTopicMarks",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "mark_1",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mark_2",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mark_3",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mark_4",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mark_5",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mark_6",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mark_7",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mark_8",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mark_9",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "mark_10",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("total_score", models.IntegerField(blank=True, null=True)),
                ("max_possible_score", models.IntegerField(blank=True, null=True)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subtopic_marks",
                        to="app1.operatorperformanceevaluation",
                    ),
                ),
                (
                    "day",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subtopic_marks",
                        to="app1.tencycledayconfiguration",
                    ),
                ),
                (
                    "subtopic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subtopic_marks",
                        to="app1.tencyclesubtopic",
                    ),
                ),
            ],
            options={
                "unique_together": {("employee", "subtopic", "day")},
            },
        ),
    ]
